{"version":3,"sources":["images/robot.png","sounds/hello.m4a","sounds/letLearn.m4a","images/angry.png","images/happy.png","images/smiling.png","images/surprised.png","images/thinking.png","images/upset.png","images/angry.gif","images/happy.gif","images/smiling.gif","images/surprised.gif","images/thinking.gif","images/upset.gif","sounds/angry.m4a","sounds/happy.m4a","sounds/sad.m4a","sounds/smile.m4a","sounds/surprised.m4a","sounds/thinking.m4a","components/robot.component.js","components/emo.buttons.js","components/popup.emo.js","components/start.app.js","components/emo.gif.array.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Robot","props","state","content","quoteOpacity","opacity","this","helloTimeOut","setTimeout","hello","document","getElementById","currentTime","play","setState","learnTimeOut","learn","prevProps","id","style","className","src","robot","alt","allow","preload","hi","Component","Buttons","display","btnTimeout","opacityTimeout","onClick","angry","happy","thinking","smiling","surprised","upset","PopUpWindow","emoGif","StartAppButton","gifsArr","emo","sound","angrySound","happySound","smileSound","surpisedSound","thinkingSound","sadSound","App","displayStart","buttons","seenPopup","currentBtn","emoSound","handelStratClick","bind","handelEmoClick","button","current","filter","el","map","prevState","emotion","start","startButton","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.77e1f6db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/robot.9eb80570.png\";","module.exports = __webpack_public_path__ + \"static/media/hello.40acd7fd.m4a\";","module.exports = __webpack_public_path__ + \"static/media/letLearn.e16c4ca1.m4a\";","module.exports = __webpack_public_path__ + \"static/media/angry.216ec719.png\";","module.exports = __webpack_public_path__ + \"static/media/happy.0242cea7.png\";","module.exports = __webpack_public_path__ + \"static/media/smiling.5bba4d69.png\";","module.exports = __webpack_public_path__ + \"static/media/surprised.4087931a.png\";","module.exports = __webpack_public_path__ + \"static/media/thinking.a7684cff.png\";","module.exports = __webpack_public_path__ + \"static/media/upset.7081abc5.png\";","module.exports = __webpack_public_path__ + \"static/media/angry.e16a9881.gif\";","module.exports = __webpack_public_path__ + \"static/media/happy.c0d2d9f5.gif\";","module.exports = __webpack_public_path__ + \"static/media/smiling.0a3a5199.gif\";","module.exports = __webpack_public_path__ + \"static/media/surprised.212aed74.gif\";","module.exports = __webpack_public_path__ + \"static/media/thinking.f5ee7171.gif\";","module.exports = __webpack_public_path__ + \"static/media/upset.287a347e.gif\";","module.exports = __webpack_public_path__ + \"static/media/angry.cbf1ed09.m4a\";","module.exports = __webpack_public_path__ + \"static/media/happy.6c09f0c5.m4a\";","module.exports = __webpack_public_path__ + \"static/media/sad.5dd3dbab.m4a\";","module.exports = __webpack_public_path__ + \"static/media/smile.751a6e6a.m4a\";","module.exports = __webpack_public_path__ + \"static/media/surprised.f90286dc.m4a\";","module.exports = __webpack_public_path__ + \"static/media/thinking.94d4413d.m4a\";","import React, { Component } from 'react';\r\nimport robot from '../images/robot.png';\r\nimport hi from '../sounds/hello.m4a'\r\nimport learn from '../sounds/letLearn.m4a'\r\n\r\n\r\nexport default class Robot extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcontent: '',\r\n\t\t\tquoteOpacity: { opacity: \"0\" }\r\n\t\t}\r\n\r\n\t}\r\n\t// here is handeling onload 'hello' 'lets learn' and uphearing of buttons\r\n\tcomponentDidMount() {\r\n\t\tthis.helloTimeOut = setTimeout(() => {\r\n\t\t\tconst hello = document.getElementById('hello');\r\n\t\t\thello.currentTime = 0;\r\n\t\t\thello.play();\r\n\t\t\tthis.setState({ content: \"Привіт\", quoteOpacity: { opacity: \"1\" } });\r\n\t\t}, 400);\r\n\r\n\t\tthis.learnTimeOut = setTimeout(() => {\r\n\t\t\tconst learn = document.getElementById('letLearn');\r\n\t\t\tlearn.currentTime = 0;\r\n\t\t\tlearn.play();\r\n\t\t\tthis.setState({ content: \"Давай вивчати емоції\" });\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.setState({ quoteOpacity: { opacity: \"0\" }, content: '' })\r\n\t\t\t}, 3300);\r\n\t\t}, 2300);\r\n\t}\r\n\t// heare we rerendering quote text and opacity of quore itself\r\n\tcomponentDidUpdate(prevProps) {\t\t\r\n\t\tif (prevProps.content !== this.props.content) {\r\n\t\t\tthis.setState({content: this.props.content});\t\t\t\r\n\t\t}\r\n\t\tif (prevProps.opacity !== this.props.opacity) {\r\n\t\t\tthis.setState({quoteOpacity: this.props.opacity});\r\n\t\t}\r\n\t}\r\n  \r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"robot_wraper\">\r\n\t\t\t\t<div style={this.state.quoteOpacity} className=\"quote_wraper\">\r\n\t\t\t\t\t<blockquote className=\"oval-thought\">\r\n\t\t<p>{this.state.content}</p>\r\n\t\t\t\t\t</blockquote>\r\n\t\t\t\t</div>\r\n\t\t\t\t<img className=\"robot\" src={robot} alt=\"robot\" />\r\n\t\t\t\t<audio allow=\"autoplay\" preload=\"auto\" id=\"hello\" src={hi} />\r\n\t\t\t\t<audio allow=\"autoplay\" preload=\"auto\" id=\"letLearn\" src={learn} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport angry from '../images/angry.png';\r\nimport happy from '../images/happy.png';\r\nimport smiling from '../images/smiling.png';\r\nimport surprised from '../images/surprised.png';\r\nimport thinking from '../images/thinking.png';\r\nimport upset from '../images/upset.png';\r\n\r\nexport default class Buttons extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      display: {display: \"none\"}\r\n    }\r\n  }\r\n  componentDidMount() {    \r\n      this.btnTimeout = setTimeout(() => {\r\n      this.setState({display: {opacity: \"0\"}});\r\n      this.opacityTimeout = setTimeout(() => {\r\n        this.setState({display: { opacity: \"1\"}});\r\n      },500)      \r\n    }, 5100);   \r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div style={this.state.display} id=\"btn_wrapper\">\r\n        <div className=\"left_block\">\r\n          <button onClick={() => this.props.onClick(\"angry\")} className=\"btn\"><img src={angry} alt=\"angry kid\" /></button>\r\n          <button onClick={() => this.props.onClick('happy')} className=\"btn central_left\"><img src={happy} alt=\"happy kid\" /></button>\r\n          <button onClick={() => this.props.onClick('thinking')} className=\"btn\"><img src={thinking} alt=\"thinking kid\" /></button>\r\n           </div>\r\n        <div className=\"right_block\">\r\n          <button onClick={() => this.props.onClick('smiling')} className=\"btn\"><img src={smiling} alt=\"smiling kid\" /></button>\r\n          <button onClick={() => this.props.onClick('surprised')} className=\"btn central_right\"><img src={surprised} alt=\"surprised kid\" /></button>\r\n          <button onClick={() => this.props.onClick('upset')} className=\"btn\"><img src={upset} alt=\"upset kid\" /></button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nconst PopUpWindow = (props) =>  <div id=\"gif_wraper\">\r\n        <img src={props.emoGif} alt=\"emo\"/>\r\n      </div>;\r\n      \r\nexport default PopUpWindow;","import React from 'react';\r\n\r\n const StartAppButton = (props) => <div style={props.display} id=\"start_btn\">\r\n   <button onClick={props.onClick}>Start</button>\r\n </div>;\r\nexport default StartAppButton;","//gif import\r\nimport angry from '../images/angry.gif';\r\nimport happy from '../images/happy.gif';\r\nimport smiling from '../images/smiling.gif';\r\nimport surprised from '../images/surprised.gif';\r\nimport thinking from '../images/thinking.gif';\r\nimport upset from '../images/upset.gif';\r\n//sound import\r\nimport angrySound from '../sounds/angry.m4a';\r\nimport happySound from '../sounds/happy.m4a';\r\nimport sadSound from '../sounds/sad.m4a';\r\nimport smileSound from '../sounds/smile.m4a';\r\nimport surpisedSound from '../sounds/surprised.m4a';\r\nimport thinkingSound from '../sounds/thinking.m4a'\r\n\r\nexport const gifsArr = [\r\n  {emo: angry, id:'angry', content: 'Злість', sound: angrySound}, \r\n  {emo: happy, id: 'happy', content: 'Щастя', sound: happySound}, \r\n  {emo: smiling, id: 'smiling', content: 'Сміх', sound: smileSound}, \r\n  {emo: surprised, id: 'surprised', content: 'Здивування', sound: surpisedSound}, \r\n  {emo: thinking, id: 'thinking', content: 'Задуманість', sound: thinkingSound}, \r\n  {emo: upset, id: 'upset', content: 'Засмученість', sound: sadSound}\r\n];\r\nexport default {\r\n  gifsArr,\r\n}","import React, { Component } from 'react';\nimport './App.scss';\nimport Robot from './components/robot.component';\nimport Buttons from './components/emo.buttons';\nimport PopUpWindow from './components/popup.emo';\nimport StartAppButton from './components/start.app';\nimport {gifsArr}  from './components/emo.gif.array';\n\n\nexport default class App  extends Component {\n  constructor(props) {\n    super(props);\n    this.state={      \n      displayStart: {display: 'flex'},\n      robot: false,\n      buttons: false,      \n      seenPopup: false,\n      currentBtn: '',\n      content: '',\n      quoteOpacity: { opacity: \"0\" },\n      emoSound: ''\n    }\n    this.handelStratClick = this.handelStratClick.bind(this); \n    this.handelEmoClick = this.handelEmoClick.bind(this);\n  }\n  handelStratClick() {\n    this.setState({     \n      displayStart: {display: 'none'},\n      robot: true,\n      buttons: true\n    })\n  }\n\n  handelEmoClick(button) { \n    // popup window hendler\n    setTimeout(() => {\n      this.setState({seenPopup: true});\n      setTimeout(() => {        \n        this.setState({seenPopup: false}); \n    }, 5000); \n    }, 2000);\n    \n    let current, content, sound;\n    // loop which assign object keys to external variables\n    gifsArr.filter(el => el.id === button)\n    .map(el => {      \n        current = el.emo;\n        content = el.content;\n        sound = el.sound; \n        return el;                    \n    });\n\n    this.setState({\n      currentBtn: current,\n      content: content,\n      quoteOpacity: { opacity: \"1\" },\n      emoSound: sound\n    });\n    \n    // this timeout for seting opacity of quote to 0\n    setTimeout(() => {\n      this.setState({quoteOpacity: { opacity: \"0\" }})\n    }, 1500);\n         \n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.emoSound !== this.state.emoSound) {\n      const emotion = document.getElementById('emo_sound');\n      emotion.currentTime = 0;\n      emotion.play();\n    }\n  }\n  render(){    \n   return (\n    <div className=\"App\">\n      <StartAppButton \n      onClick={this.handelStratClick} \n      display={this.state.displayStart} \n      start={this.state.startButton}/>\n      {this.state.robot ? <Robot content={this.state.content} opacity={this.state.quoteOpacity} /> : null}\n      {this.state.buttons ? <Buttons onClick={this.handelEmoClick}/> : null}\n      {this.state.seenPopup ? <PopUpWindow emoGif={this.state.currentBtn} /> : null} \n      {/* when emotion button pressed it will make sound of it */}\n      <audio allow=\"autoplay\" preload=\"auto\" id=\"emo_sound\" src={this.state.emoSound} />           \n    </div>\n  ); \n  }\n  \n}\n\n\n// gifsArr.map((el) => {\n//   if (el.id === button) {\n//     current = el.emo;\n//     content = el.content;\n//     sound = el.sound;\n//   }\n// });","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}